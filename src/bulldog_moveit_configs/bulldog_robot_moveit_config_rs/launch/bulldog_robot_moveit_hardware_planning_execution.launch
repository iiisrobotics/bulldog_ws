<launch>
  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  
  <!-- <include file="$(find bulldog_robot_moveit_config_rs)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include> -->

  <!-- ur5 hardware interfaces -->
  <node name="ur5_left_hardware_interface" pkg="ur_modern_driver" type="ur_driver" output="screen" 
    launch-prefix="$(arg launch_prefix)">
    <param name="robot_ip_address" type="str" value="$(arg ur5_left_ip)" />
    <param name="reverse_port" value="$(arg ur5_left_reverse_port)"/>
    <param name="min_payload" type="double" value="$(arg ur5_min_payload)" />
    <param name="max_payload" type="double" value="$(arg ur5_max_payload)" />
    <param name="max_velocity" type="double" value="$(arg ur5_max_velocity)" />
    <param name="use_ros_control" type="bool" value="True"/>
    <param name="servoj_gain" type="double" value="750" />
    <!-- <param name="servoj_time" type="double" value="$(arg servoj_time)" /> -->
    <param name="prefix" type="str" value="$(arg ur5_left_prefix)" />
    <param name="base_frame" type="str" value="$(arg ur5_left_base_frame)"/>
    <param name="tool_frame" type="str" value="$(arg ur5_left_tool_frame)"/>
    <param name="shutdown_on_disconnect" type="bool" value="$(arg ur5_shutdown_on_disconnect)"/>
  </node>

  <node name="ur5_right_hardware_interface" pkg="ur_modern_driver" type="ur_driver" output="screen" 
    launch-prefix="$(arg launch_prefix)">
    <param name="robot_ip_address" type="str" value="$(arg ur5_right_ip)" />
    <param name="reverse_port" value="$(arg ur5_right_reverse_port)"/>
    <param name="min_payload" type="double" value="$(arg ur5_min_payload)" />
    <param name="max_payload" type="double" value="$(arg ur5_max_payload)" />
    <param name="max_velocity" type="double" value="$(arg ur5_max_velocity)" />
    <param name="use_ros_control" type="bool" value="True"/>
    <param name="servoj_gain" type="double" value="750" />
    <!-- <param name="servoj_time" type="double" value="$(arg servoj_time)" /> -->
    <param name="prefix" type="str" value="$(arg ur5_right_prefix)" />
    <param name="base_frame" type="str" value="$(arg ur5_right_base_frame)"/>
    <param name="tool_frame" type="str" value="$(arg ur5_right_tool_frame)"/>
    <param name="shutdown_on_disconnect" type="bool" value="$(arg ur5_shutdown_on_disconnect)"/>
  </node>

  <!-- robotiq 3 finger gripper hardware interfaces -->
  <group ns="left_gripper">
    <node name="robotiq_3f_gripper_hardware_interface" pkg="robotiq_3f_gripper_control" type="Robotiq3FGripperTcpNode.py" 
      args="$(arg robotiq_left_ip)">
      <remap from="Robotiq3FGripperRobotInput" to="state"/>
      <remap from="Robotiq3FGripperRobotOutput" to="command"/>
    </node>

    <!--
    <node name="robotiq_3f_gripper_joint_state_publisher" pkg="robotiq_3f_gripper_joint_state_publisher" type="robotiq_3f_gripper_joint_states">
      <param name="prefix" type="str" value="$(arg robotiq_left_prefix)"/>
      <remap from="Robotiq3FGripperRobotInput" to="left_hand/Robotiq3FGripperRobotInput"/>
      <remap from="joint_states" to="left_gripper/joint_states"/>
    </node>
    -->
  </group>

  <group ns="right_gripper">
    <node name="robotiq_3f_gripper_hardware_interface" pkg="robotiq_3f_gripper_control" type="Robotiq3FGripperTcpNode.py"
      args="$(arg robotiq_right_ip)">
      <remap from="Robotiq3FGripperRobotInput" to="state"/>
      <remap from="Robotiq3FGripperRobotOutput" to="command"/>
    </node>

    <!--
    <node name="robotiq_3f_gripper_joint_state_publisher" pkg="robotiq_3f_gripper_joint_state_publisher" type="robotiq_3f_gripper_joint_states">
      <param name="prefix" type="str" value="$(arg robotiq_right_prefix)"/>
      <remap from="Robotiq3FGripperRobotInput" to="right_hand/Robotiq3FGripperRobotInput" />
      <remap from="joint_states" to="right_gripper/joint_states" />
    </node>
    -->
  </group>

  <!-- broadcast static tf for virtual robot root -->
  <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom base_link 100" />

  <!-- startup MoveIt move group context -->
  <include file="$(find bulldog_robot_moveit_config_rs)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- startup rviz -->
  <include file="$(find bulldog_robot_moveit_config_rs)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

</launch>
